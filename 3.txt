#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RU");
    double amount;
    cout << "Введите стоимость: ";
    cin >> amount;
    double discount = 0;
    if (amount > 5000) {
        discount = 0.1;
    }
    else if (amount > 1500) {
        discount = 0.05;
    }
    else if (amount > 800) {
        discount = 0.03;
    }
    double total = amount - amount * discount;
    cout << "Total: " << total << endl;
    return 0;
}
//Для ввода и вывода данных в консоли на языке программирования C++, вы можете использовать стандартные потоки ввода / вывода: std::cin для ввода и std::cout для вывода.
//------------------------------------------------------------------------------------------------------------------------------------------
//В языке программирования C++ логические отношения и логические выражения используются для определения условий и принятия решений в коде.Вот некоторые из основных логических отношений и операторов, которые вы можете использовать :
//
//1. * *Логическое И(AND) * *: Оператор & .Возвращает true, если оба операнда истинны, иначе возвращает false.
//
//bool a = true, b = false;
//bool result = a && b; // Результат будет false
//
//
//2. * *Логическое ИЛИ(OR) * *: Оператор | .Возвращает true, если хотя бы один из операндов истинен, иначе возвращает false.
//
//bool c = true, d = false;
//bool result = c || d; // Результат будет true
//
//
//3. * *Логическое НЕ(NOT) * *: Оператор !.Инвертирует значение своего операнда.Если операнд истинен, возвращает false, если ложен - true.
//
//bool e = true;
//bool result = !e; // Результат будет false
//
//
//4.     Приоритет операций : Если в выражении присутствуют несколько операторов, то они выполняются в следующем порядке : сначала NOT, затем AND, после чего OR.Если необходимо изменить порядок выполнения, можно использовать скобки для группировки выражений.
//
//bool f = true, g = false;
//bool result = (f && g) || (!f && g); // Результат будет false
//
//
//5. * *Тернарный оператор * *: Это специальная форма условного выражения, которое позволяет выбрать одно из двух значений в зависимости от результата проверки условия.Формат : (условие) ? значение_если_истина : значение_если_ложь.
//
//int x = 5;
//int y = 10;
//int z = x > y ? x : y; // z будет равно 10, так как x не больше y
//
//
//6.     Операторы сравнения : Используются для проверки равенства, неравенства, меньше, больше и т.д.между двумя значениями.
//
//int m = 3, n = 4;
//bool result = m < n; // Результат будет true, так как 3 меньше 4
//
//
//7. * *Логические переменные * *: В C++ логические типы данных включают bool, который может принимать значения true или false.
//
//bool isTrue = true;
//if (isTrue) {
//    // Делаем что-то, если isTrue равно true
//}
//
//
//Эти логические отношения и операторы широко используются в условиях циклов, условных операторах и других частях кода для управления поведением программы в зависимости от различных условий.
