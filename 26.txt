№26
#include <iostream>
#include <vector>
#include <algorithm> 
using namespace std;


int max(vector<int> a) {
    int temp = 0;
    for (int i = 0; i < a.size(); i++)
    {
        if (a[temp] < a[i])
        {
            temp = i;
        }
    }
    return temp;
}

int min(vector<int> a) {
    int temp = 0;
    for (int i = 0; i < a.size(); i++)
    {
        if (a[temp] > a[i])
        {
            temp = i;
        }

    }
    return temp;
}

void spetial_sort(vector<int>& a) {
    int temp;
    for (int i = 0; i < a.size(); i++)
    {
        if (a[i] < 0) {
            temp = a[a.size() - 1];
            a[a.size() - 1] = a[i];
            a[i] = temp;
            a.pop_back();
        }
    }
    sort(a.begin(), a.end());
}


int main() {
    setlocale(LC_ALL, "Ru");

    cout << "Введите количество элементов в массиве: ";
    int num_elements;
    cin >> num_elements;

    vector<int> arr(num_elements);
    

    cout << "Введите элементы массива: ";
    for (int i = 0; i < num_elements; i++) {
        cin >> arr[i];
    }

    cout << "индекс максимального значения до сортировки: " << max(arr) << endl << "индекс минимального значения до сортировки: " << min(arr) << endl<<endl;

    spetial_sort(arr);

    cout << "индекс максимального значения после сортировки: " << max(arr) << endl << "индекс минимального значения после сортировки: " << min(arr) << endl << endl;

    return 0;
}








/*
Вар26
1. Локальные переменные определяются внутри блока кода и доступны только внутри этого блока. Глобальные переменные определены вне всех функций и доступны из любого места в программе. Важно отметить, что использование глобальных переменных может привести к путанице и сложностям в управлении состоянием программы, поэтому их следует использовать осторожно.

2. Конструктор — это специальный метод, который вызывается при создании объекта класса. Его роль заключается в инициализации объекта и подготовке его к использованию. Конструктор может принимать параметры, которые используются для настройки свойств объекта при его создании.
 

*/