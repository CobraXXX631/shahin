#include <iostream>

int main() {
    setlocale(LC_ALL, "RU");
    int a, b;

    std::cout << "Введите первое число: ";
    std::cin >> a;
    std::cout << "Введите второе число: ";
    std::cin >> b;

    if (a > b) {
        std::cout << "Первое число больше второго." << std::endl;
    }
    else if (a < b) {
        std::cout << "Второе число больше первого." << std::endl;
    }
    else {
        std::cout << "Числа равны." << std::endl;
    }

    return 0;
}
//Алгоритмы и блок - схемы в C++ относятся к способам представления и реализации алгоритмических процессов в программе.
//
//Алгоритмы в C++ могут быть реализованы непосредственно в коде, используя циклы, условные операторы и другие конструкции языка.Например, алгоритм сортировки может быть реализован с помощью алгоритма sort из стандартной библиотеки C++ или путем написания собственного алгоритма сортировки, такого как сортировка выбором, сортировка вставками и т.д.
//
//Блок - схемы в C++ обычно используются для визуализации алгоритмов и процессов, которые должны быть реализованы в коде.Блок - схемы представляют собой графическое изображение последовательности шагов алгоритма, где каждый блок представляет собой определенную операцию или условие.Блок - схемы могут быть созданы с помощью специализированных инструментов или вручную.
//
//Вот пример простой блок - схемы на C++:
//
//+---- - +
//|     |
//|   +-+-+-+
//|   |   |
//|   |   |
//|   +-+-+-+
//|     |
//+---- - +
//
//
//Эта блок - схема может быть реализована в C++ следующим образом :
//
//#include <iostream>
//
//int main() {
//    int a, b;
//    std::cin >> a >> b; // Ввод двух чисел
//
//    if (a > b) {
//        std::cout << a << " is greater than " << b << std::endl; // Вывод, если a больше b
//    }
//    else if (a < b) {
//        std::cout << b << " is greater than " << a << std::endl; // Вывод, если b больше a
//    }
//    else {
//        std::cout << a << " equals " << b << std::endl; // Вывод, если a равно b
//    }
//
//    return 0;
//}
//
//
//В этом примере блок - схема представляет собой алгоритм сравнения двух чисел и вывода результата.Код C++ реализует этот алгоритм, используя условные операторы и ввод / вывод.
//В C++ существуют различные типы данных, включая целые числа(например, int, short, long, long long, signed char, unsigned int, unsigned short, unsigned long, unsigned long long), числа с плавающей точкой(например, float, double, long double), логический тип(bool), символьный тип(char, wchar_t, char16_t, char32_t) и другие.
//
//Арифметические операции в C++ включают сложение(+), вычитание(-), умножение(*), деление(/ ) и взятие остатка от деления(%).Эти операции могут быть применены к большинству числовых типов данных.
//
//Пример арифметических операций в C++:
//
//#include <iostream>
//
//int main() {
//    int a = 10;
//    int b = 5;
//    int c = a + b; // Сложение
//    int d = a - b; // Вычитание
//    int e = a * b; // Умножение
//    int f = a / b; // Деление (целое)
//    int g = a % b; // Взятие остатка от деления
//
//    std::cout << "a + b = " << c << std::endl;
//    std::cout << "a - b = " << d << std::endl;
//    std::cout << "a  *  b = " << e << std::endl;
//    std::cout << "a / b = " << f << std::endl;
//    std::cout << "a % b = " << g << std::endl;
//
//    return 0;
//}
//
//
//В этом примере мы используем арифметические операции для чисел типа int.Обратите внимание, что операция деления / возвращает целое число, то есть результат деления 10 на 5 будет равен 2, а не 2.0.Если вам нужен результат с плавающей точкой, вы можете использовать тип float или double.
